<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aisiono.store.mapper.UserMapper">

    <!--自定义映射规则:resultMap标签来完成映射规则的定义-->
    <!--
       id属性:标签给这个映射负责分配一个唯一的id值,对应的就是resultMap="id属性的值"属性的取值
       type属性:取值是一个类,表示的是数据库中的查询结果与java中哪个实体类进行结果集的映射
    -->
    <!--
       column属性:表中的字段名称
       property属性:表示类中的属性名称
    -->
    <resultMap id="UserEntityMap" type="com.aisiono.store.entity.User">
        <!--将表的字段和类的属性不一致的字段进行匹配指定,名称一致的字段可以省略不写-->
        <!--自定义映射规则时主键是不可忽略的-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--id属性：表示映射的接口中方法的名字-->
    <!--
      useGeneratedKeys:开启某个字段的值自增（主键设置为自增）
      keyProperty：表示将表中的哪个字段作为主键进行自增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid" >
        insert into t_user(username,password,salt,phone,email,gender,avatar,
                           is_delete,created_user,created_time,modified_user,modified_time) values
                          (#{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},
                           #{isDelete},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime})
    </insert>
    <!--select语句在执行的时候,查询的结果为一个对象或者多个对象-->
    <!--
      resultType:查询的结果集类型,只需要指定对应映射类的类型,并且包含完整的包结构
      resultMap:当表的字段和类的对象属性名称不一致时,来自定义查询结果集的映射规则
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        select * from t_user where username=#{username}
    </select>

    <!--根据用户ID查询用户数据-->
    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid=#{uid}
    </select>

    <!--根据用户ID更新密码-->
    <update id="updatePasswordByUid" >
        update t_user set password=#{password},modified_user=#{modifiedUser},modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>

    <update id="updateInfoByUid">
        update t_user set
                <if test="phone!=null"> phone=#{phone},</if>
                <if test="email!=null">email=#{email},</if>
                <if test="gender!=null">gender=#{gender},</if>
                modified_user=#{modifiedUser},modified_time=#{modifiedTime} where uid=#{uid}
    </update>


    <update id="updateAvatarByUid">
        update t_user set avatar=#{avatar},modified_user=#{modifiedUser},modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>


</mapper>